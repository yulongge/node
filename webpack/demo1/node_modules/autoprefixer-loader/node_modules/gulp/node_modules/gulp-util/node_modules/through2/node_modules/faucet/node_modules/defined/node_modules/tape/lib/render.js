var Stream = require('stream');
var json = typeof JSON === 'object' ? JSON : require('jsonify');

module.exports = Render;

function Render () {
    Stream.call(this);
    this.readable = true;
    this.count = 0;
    this.fail = 0;
    this.pass = 0;
}

Render.prototype = new Stream;

Render.prototype.pipe = function () {
    this.piped = true;
    return Stream.prototype.pipe.apply(this, arguments);
};

Render.prototype.begin = function () {
    this.emit('data', 'TAP version 13\n');
};

Render.prototype.push = function (t) {
    var self = this;
    this.emit('data', '# ' + t.name + '\n');
    
    t.on('result', function (res) {
        if (typeof res === 'string') {
            self.emit('data', '# ' + res + '\n');
            return;
        }

        self.emit('data', encodeResult(res, self.count + 1));
        self.count ++;
        
        if (res.ok) self.pass ++
        else self.fail ++
    });
};

Render.prototype.close = function () {
    this.emit('data', '\n1..' + this.count + '\n');
    thi