var assert = require('assert'),
    utils = require('./utils');

var messages = {
    'equal'       : "expected {expected},\n\tgot\t {actual} ({operator})",
    'notEqual'    : "didn't expect {actual} ({operator})"
};
messages['strictEqual']    = messages['deepEqual']    = messages['equal'];
messages['notStrictEqual'] = messages['notDeepEqual'] = messages['notEqual'];

for (var key in messages) {
    assert[key] = (function (key, callback) {
        return function (actual, expected, message) {
            callback(actual, expected, message || messages[key]);
        };
    })(key, assert[key]);
}

assert.epsilon = function (eps, actual, expected, message) {
    assertMissingArguments(arguments, assert.epsilon);
    if (isNaN(eps)) {
        assert.fail(actual, expected, message || "cannot compare {actual} with {expected} \u00B1 NaN");
    } else if (isNaN(actual) || Math.abs(actual - expected) > eps) {
        assert.fail(actual, expected, message || "expected {expected} \u00B1"+ eps +", but was {actual}");
