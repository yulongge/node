# 11.0.0

## streams3

The [`readable-stream`](https://npmjs.com/package/readable-stream) dependency was updated to `^2.0.0`. This package is inserted into bundles as `require('stream')`. Bundles will now get the latest streams implementation from io.js/node.js core, instead of an old version from node.js 0.11.x. Go forth and stream ALL THE DATA without fear!

## shiny new HTTP package

[John Hiesey](https://github.com/jhiesey) rewrote the [http-browserify](https://npmjs.org/package/http-browserify) package
to create [stream-http](https://npmjs.org/package/stream-http), an implemention of `http` that supports streaming in modern browsers. Before v11.0.0, in most situations when you used `http.get` or `http.request`, the entire request would buffer in memory until the download was complete, and a single `'data'` event was emitted with the entire response as a string.

`stream-http` uses the [Fetch API](https://fetch.spec.whatwg.org/) and various browser-specific XHR extensions to make binary streaming http requests work in as many browsers as possible.

The following browsers support true streaming, where only a small amount of the request has to be held in memory at once:

* Chrome >= 43 (using the `fetch` api)
* Firefox >= 9 (using `moz-chunked-arraybuffer` responseType with XHR)

The following browsers support pseudo-streaming, where the data is available before the request finishes, but the entire response must be held in memory:

* Safari >= 5
* IE >= 10
* Most other Webkit-based browsers, including the default Android browser

Older browsers will work, without streaming support. There is no support for IE6 or IE7.

Compared to `http-browserify`, it is not necessary to set `options.responseType`. The `responseType` property of the XHR object will be set automatically depending on what features are detected in the browser (although see `options.mode` in the [readme](https://github.com/jhiesey/stream-http) to see how you can optimize this choice manually).

The `response` is a streams3 stream, so all data is passed as `Buffer`s, unlike the variable types provided by the `'data'` event in `http-browserify`. This behavior tries to mimic the node core `http` module as closely as possible.

* [#1327](https://github.com/substack/node-browserify/pull/1327)

If you're brave, go ahead and give v11.0.0 a try today!

# 10.2.6

uses the non-sync version of fs.realpath

# 10.2.5

fixes an issue with symlinked files executing multiple times

https://github.com/substack/node-browserify/issues/1063
https://github.com/substack/node-browserify/pull/1318

# 10.2.4

fixes requiring an entry from another entry

remove unused dep "deep-equal" and unused file "lib/_exclude.js"

https://github.com/substack/node-browserify/pull/1268

# 10.2.3

fixes an errant space in the `--no-browser-field` flag alias
that kept it from working

https://github.com/substack/node-browserify/issues/1286

# 10.2.2

fix tests for tap@^1.1.0 (and update tap)

https://github.com/substack/node-browserify/pull/1276

# 10.2.1

housekeeping - removed unused code

https://github.com/substack/node-browserify/pull/1273

# 10.2.0

remove unnecessary "isDedupe" json check. this was a hack-fix for watchify <=2.4.

https://github.com/substack/node-browserify/pull/1244

fixes for the "noParse" path matcher.

https://github.com/substack/node-browserify/pull/1259

add syntax check cache. this speeds up rebuilds (like when using watchify).

https://github.com/substack/node-browserify/pull/1253

update to browser-pack@^5.0.0 - includes several fixes related to source maps.

https://github.com/substack/node-browserify/pull/1257

# 10.1.3

Replace jsonstream with JSONStream

https://github.com/substack/node-browserify/pull/1252

# 10.1.2

Replace JSONStream with jsonstream
Update deps to avoid jsonstream npm case problems

https://github.com/substack/node-browserify/pull/1247
https://github.com/substack/node-browserify/commit/1ca71e23

# 10.1.1

ensures that entry paths are always full paths

https://github.com/substack/node-browserify/pull/1248

# 10.1.0

adds `--no-browser-field` and `opts.browserField = false` behavior to turn off
the package.json browser field. This is useful if you want to make a bundle with
a target of node or some environment with shimmed node primitives.

A new alias `--node` sets `--no-browser-field` and `--bare`.

https://github.com/substack/node-browserify/pull/1240

# 10.0.0

## Possibly Breaking Change
The ‘process’ dependency was updated to ~0.11.0, this module is inserted into bundles as the ‘process’ global/dependency.
Previously, an unhandled error thrown in a ‘process.nextTick’ task would prevent any subsequent tasks from running, forever.
The task queue now recovers from this condition, but may do so on a future browser tick.
As part of this update, ‘process.nextTick’ now accepts variadic arguments, passed to the task, added to io.js in 1.8.1.

* [#1231](https://github.com/substack/node-browserify/pull/1231)
* [defunctzombie/node-process#38](https://github.com/defunctzombie/node-process/pull/38)
* [iojs/io.js#1077](https://github.com/iojs/io.js/pull/1077)

## Other changes

* Escapes JavaScript-unsafe characters from JSON. [#1211](https://github.com/substack/node-browserify/pull/1211)
* Removes ‘-v’ shortcut for ‘--version’ (conflicted with watchify) [#1222](https://github.com/substack/node-browserify/pull/1222)
* Updated ‘defined’, ‘punycode’, ‘module-deps’, and ‘xtend’ dependencies to reduce install size [#1230](https://github.com/substack/node-browserify/pull/1230)

# 9.0.8

makes `.require({ expose: 'name' })` and `require('name')` work at the same time

https://github.com/substack/node-browserify/issues/850
https://github.com/substack/node-browserify/pull/1202

# 9.0.7

fixes an issue with catching error events on the b.bundle() stream

https://github.com/substack/node-browserify/issues/1194
https://github.com/substack/node-browserify/pull/1195

# 9.0.6

republishing 9.0.5 in an attempt to satisfy npm.

# 9.0.5

sets the stream returned by bundle() to be readable-only

https://github.com/substack/node-browserify/pull/1187#issuecomment-89044008

# 9.0.4

handles the colon better for drive paths and improves the test suite for windows
users

https://github.com/substack/node-browserify/pull/1182
https://github.com/substack/node-browserify/pull/1183

# 9.0.3

fixes a problem with deduping for json files.

This caused problems for running bundle() multiple times on the same instance
with caching turned on, which people reported encountering using watchify.

https://github.com/substack/node-browserify/issues/1101
https://github.com/substack/watchify/issues/143

# 9.0.2

fixes a bug where transforms in `opts.transform` were getting run twice

https://github.com/substack/node-browserify/issues/1124
https://github.com/substack/node-browserify/pull/1128

# 9.0.1

fixes exposed files persisting across bundles

https://github.com/substack/node-browserify/pull/1030

# 9.0.0

updates browser-pack which uses umd 3.0.0.
This sligtly changes how `--standalone $name` works.

https://github.com/substack/browser-pack/pull/49
https://github.com/substack/node-browserify/pull/1105

Also some tidying up around handling expose that module-deps can do now:

https://github.com/substack/node-browserify/pull/1077

and some fixes to regressions involving the `'package'` event:

https://github.com/substack/node-resolve/issues/69

Upstream changes in resolve/browser-resolve mean that `require('foo/bar')` works
better with the package.json browser field. You can do something like:

``` json
{
  "browser": { "./bar": "whatever.js" }
}
```

# 8.1.3

uses / instead of \ for source map url separators on windows
https://github.com/substack/node-browserify/pull/1096

# 8.1.2

resolves mappings from the browser field for externals

https://github.com/substack/node-browserify/pull/1100

# 8.1.1

fixes an issue with resolving exposed packages relative to the basedir

https://github.com/substack/node-browserify/pull/1059
https://github.com/substack/node-browserify/issues/1039
https://github.com/daiweilu/browserify-broken-require

# 8.1.0

use assert@1.3, which fixes a bug in assert.deepEqual related to argument ordering,
and ensures assert.deepEqual continues working in Chrome 40 and Firefox 35.

use process@0.10, which adds process.umask() and a faster process.nextTick()
implementation.

https://github.com/substack/node-browserify/pull/1018
https://github.com/substack/node-browserify/pull/1041

# 8.0.3

passes opts.debug through to insert-module-globals so that is can insert inline
source maps for its modifications

# 8.0.2

ensures that transforms always execute in the order they were added

https://github.com/substack/node-browserify/pull/1043

# 8.0.1

fixes some file path leaks in deduped deps

https://github.com/substack/node-browserify/pull/994
https://github.com/substack/node-browserify/issues/951

# 8.0.0

In previous releases, the deduping logic was over-zealous about how it handled
module references for duplicates. The prior behavior would detect when the
dependency tree of a module matched an existing module in addition to having the
exact same source code to share an instance. This was originally designed to
support libraries like threejs that internally use `instanceof` checks that
don't usually work very well across multiple packages. This feature didn't pan
out and didn't work very well in practice.

Later, a better way of deduping emerged after some unrelated tweaks to
browser-pack to support source introspection for webworkers. The reflection form
of deduping using implicit arguments is now the only kind.

The deduping instance feature resulted in this bug:
https://github.com/substack/node-browserify/issues/1027
which created very surprising results when duplicate files were in use.

# 7.1.0

uses the new buffer@3.0.0, which passes node's own buffer test suite

https://github.com/substack/node-browserify/pull/1040

# 7.0.3

allows modules to be bundled with local paths and exposed at the same time

https://github.com/substack/node-browserify/pull/1033

# 7.0.2

fixes the global transform getting added each re-bundle

https://github.com/substack/node-browserify/issues/1026

# 7.0.1

fixes rebundling (used by watchify) when transforming

https://github.com/substack/node-browserify/issues/1012

also fixes https://github.com/substack/node-browserify/issues/1015

# 7.0.0

Global transforms are now resolved to an absolute path before walking files.
This fixes some bugs with local module versions taking precedence over global
transforms and unresolvable global transforms spanning system directories.

This is a small breaking change since now transform objects live in the pipeline
between the record and deps phases. This should only affect programs that expect
records in the pipeline to only contain file objects.

# 6.3.4

fixes a bug setting placeholder filenames on stream inputs to be properly unique

# 6.3.3

fixes an issue with the expose property when opts.fullPaths is enabled

This issue commonly crops up in watchify.

https://github.com/substack/node-browserify/pull/991
https://github.com/substack/node-browserify/issues/850

# 6.3.2

updates regexps that test for absolute and relative paths to work better on
windows

https://github.com/substack/node-browserify/pull/948

# 6.3.1

fixes ignoreTransform for the case where transforms were given in package.json
as an array

https://github.com/substack/node-browserify/pull/966

# 6.3.0

uses noParse for better parity with module-deps

https://github.com/substack/node-browserify/pull/954

# 6.2.0

fixes #!shebang syntax when --bare is in effect by adding an unshebang phase to
the pipeline

https://github.com/substack/node-browserify/issues/943

# 6.1.2

fixes the behavior for multiple external bundles

https://github.com/substack/node-browserify/issues/933

# 6.1.1

fixes a circular dependency issue with readable-stream

https://github.com/substack/node-browserify/pull/964
https://github.com/substack/node-browserify/issues/963

# 6.1.0

allows transforms to be ignored throughout the entire bundle

https://github.com/substack/node-browserify/pull/945

# 6.0.3

fixes a bug where module insert-module-globals would trigger too soon and
conflict with other transforms

https://github.com/substack/node-browserify/issues/867
https://github.com/substack/node-browserify/issues/895
https://github.com/substack/node-browserify/issues/855

# 6.0.2

upgrades process to 0.8.0
https://github.com/substack/node-browserify/pull/906

# 6.0.1

respects opts.expose in require()
https://github.com/substack/node-browserify/pull/907

# 6.0.0

resolves source map maths relative to the base url. This should help with more
reproducible builds.

https://github.com/substack/node-browserify/pull/923

Version 6 is a tiny but breaking change to how source map paths work.

Now all source map paths are relative by default. This makes it easier to have
deterministic debug builds across different systems and directories. If
browserify is installed in a project-local directory, all the source map paths
will be self-contained and relative against that location in node_modules.

# 5.13.1

bails early if opts.basedir is not the correct type
https://github.com/substack/node-browserify/pull/927

# 5.13.0

exposes global browserify options to transforms under opts._flags
https://github.com/substack/node-browserify/pull/910

# 5.12.2

fixes the array form of b.external()
https://github.com/substack/node-browserify/issues/930

# 5.12.1

dedupe deps when fullPaths is on
https://github.com/substack/node-browserify/pull/917
and fixes the crypto tests

# 5.12.0

adds back the array form for add() and require(), with extra places to add
options

# 5.11.2

fixes ignore for relative paths
in https://github.com/substack/node-browserify/issues/896

# 5.11.1

fixes exports across resets, which caused issues for watchify with exports
https://github.com/substack/node-browserify/pull/892

# 5.11.0

adds an implicit dependency on the original module during dedupe
https://github.com/substack/node-browserify/pull/880

# 5.10.1

fixes the command-line client to properly ignore paths that don't match a glob
https://github.com/substack/node-browserify/pull/866

# 5.10.0

adds back support for `.external(b)` on a browserify instance `b`
that was dropped on the v5 refactor

# 5.9.3

buffers the record pipeline phase to start outputting after the first tick
so that user plugins can capture and modify recorder output

# 5.9.2

fixes a bug with using --ignore to exclude node_modules packages on the command-line

https://github.com/substack/node-browserify/pull/845

# 5.9.1

improves the detection for --ignore

# 5.9.0

fixes bug with builtins that load json files (the 'constants' module),
new 'json' pipeline label

https://github.com/substack/module-deps/issues/46

# 5.8.0

allow optional extensions in bin/args

# 5.7.0

re-instates transforms after a reset and fixes exposing the transform events
properly

# 5.6.1

makes stream entry files deterministic

# 5.6.0

adds 'package' events from module-deps when a package.json file is read

# 5.5.0

adds back the `'bundle'` event and copies over options correctly to reset()

# 5.4.2

adds a note about derequire in standalone mode to the readme

# 5.4.1

fixes an error with basedir resolving plugins from names

# 5.4.0

also allows opts.plugin from the constructor like transform

# 5.3.0

passes `.file` on stream inputs through to transforms
https://github.com/substack/node-browserify/issues/744

# 5.2.1

sets require() for streams to not just be entry files

# 5.2.0

upgrades crypto-browserify to v3

# 5.1.1

updates --list to always print file paths

# 5.1.0

adds back `.plugin()` which was mistakenly omitted

# 5.0.8

fixes using debug and standalone at the same time
https://github.com/substack/node-browserify/issues/750

# 5.0.7

fixes command-line versions of -u and -x
https://github.com/substack/node-browserify/issues/821

# 5.0.6

test for --bare

# 5.0.5

fix for detectGlobals, --bare
https://github.com/substack/node-browserify/issues/803

# 5.0.4

fixes --no-bundle-external with globals

https://github.com/substack/node-browserify/issues/828

# 5.0.3

upgrades insert-module-globals to fix
https://github.com/substack/node-browserify/issues/834

# 5.0.