module.exports =
[ [ 'line', 'TAP version 13\n' ],
  [ 'version', '13' ],
  [ 'line', '# buffer_compare.js\n' ],
  [ 'comment', '# buffer_compare.js\n' ],
  [ 'line', '# TAP version 13\n' ],
  [ 'comment', '# TAP version 13\n' ],
  [ 'line', '# same buffers\n' ],
  [ 'comment', '# same buffers\n' ],
  [ 'line', 'ok 1 should be equivalent\n' ],
  [ 'line', '# not same buffers\n' ],
  [ 'line', 'ok 2 should not be equivalent\n' ],
  [ 'assert', { ok: true, id: 1, name: 'should be equivalent' } ],
  [ 'comment', '# not same buffers\n' ],
  [ 'line', '# tests 2\n' ],
  [ 'line', '# pass  2\n' ],
  [ 'line', '# ok\n' ],
  [ 'line', 'ok 3 test/buffer_compare.js\n' ],
  [ 'assert',
    { ok: true, id: 2, name: 'should not be equivalent' } ],
  [ 'comment', '# tests 2\n' ],
  [ 'comment', '# pass  2\n' ],
  [ 'comment', '# ok\n' ],
  [ 'line', '# common.js\n' ],
  [ 'line', 'ok 4 just setup, nothing relevant\n' ],
  [ 'assert',
    { ok: true, id: 3, name: 'test/buffer_compare.js' } ],
  [ 'comment', '# common.js\n' ],
  [ 'line', 'ok 5 test/common.js\n' ],
  [ 'assert',
    { ok: true, id: 4, name: 'just setup, nothing relevant' } ],
  [ 'line', '# consumer.js\n' ],
  [ 'line', '# TAP version 13\n' ],
  [ 'line', '# basic.tap\n' ],
  [ 'line', 'ok 6 should be equivalent\n' ],
  [ 'assert', { ok: true, id: 5, name: 'test/common.js' } ],
  [ 'comment', '# consumer.js\n' ],
  [ 'comment', '# TAP version 13\n' ],
  [ 'comment', '# basic.tap\n' ],
  [ 'line', '# indent.tap\n' ],
  [ 'line', 'ok 7 should be equivalent\n' ],
  [ 'assert', { ok: true, id: 6, name: 'should be equivalent' } ],
  [ 'comment', '# indent.tap\n' ],
  [ 'line', '# missing.tap\n' ],
  [ 'line', 'ok 8 should be equivalent\n' ],
  [ 'assert', { ok: true, id: 7, name: 'should be equivalent' } ],
  [ 'comment', '# missing.tap\n' ],
  [ 'line', '# skip-all.tap\n' ],
  [ 'line', 'ok 9 should be equivalent\n' ],
  [ 'assert', { ok: true, id: 8, name: 'should be equivalent' } ],
  [ 'comment', '# skip-all.tap\n' ],
  [ 'line', '# yamlish.tap\n' ],
  [ 'line', 'ok 10 should be equivalent\n' ],
  [ 'assert', { ok: true, id: 9, name: 'should be equivalent' } ],
  [ 'comment', '# yamlish.tap\n' ],
  [ 'line', '# tests 5\n' ],
  [ 'line', '# pass  5\n' ],
  [ 'line', '# ok\n' ],
  [ 'line', 'ok 11 test/consumer.js\n' ],
  [ 'assert', { ok: true, id: 10, name: 'should be equivalent' } ],
  [ 'comment', '# tests 5\n' ],
  [ 'comment', '# pass  5\n' ],
  [ 'comment', '# ok\n' ],
  [ 'line', '# debug-test.js\n' ],
  [ 'line', 'debug test\n' ],
  [ 'extra', 'debug test\n' ],
  [ 'line', 't.plan=1\n' ],
  [ 'extra', 't.plan=1\n' ],
  [ 'line', '\'Debugger listening on port 5858\\n\'\n' ],
  [ 'extra', '\'Debugger listening on port 5858\\n\'\n' ],
  [ 'line', '# TAP version 13\n' ],
  [ 'line', '# debug test\n' ],
  [ 'line', 'ok 12 Should output debugger message\n' ],
  [ 'assert', { ok: true, id: 11, name: 'test/consumer.js' } ],
  [ 'comment', '# debug-test.js\n' ],
  [ 'comment', '# TAP version 13\n' ],
  [ 'comment', '# debug test\n' ],
  [ 'line', '# tests 1\n' ],
  [ 'line', '# pass  1\n' ],
  [ 'line', '# ok\n' ],
  [ 'line', 'ok 13 test/debug-test.js\n' ],
  [ 'assert',
    { ok: true, id: 12, name: 'Should output debugger message' } ],
  [ 'comment', '# tests 1\n' ],
  [ 'comment', '# pass  1\n' ],
  [ 'comment', '# ok\n' ],
  [ 'line', '# deep-strict.js\n' ],
  [ 'line', '# TAP version 13\n' ],
  [ 'line',
    '# strictDeepEquals shouldn\'t care about key order\n' ],
  [ 'line', 'ok 14 should be strictly equal\n' ],
  [ 'assert', { ok: true, id: 13, name: 'test/debug-test.js' } ],
  [ 'comment', '# deep-strict.js\n' ],
  [ 'comment', '# TAP version 13\n' ],
  [ 'comment',
    '# strictDeepEquals shouldn\'t care about key order\n' ],
  [ 'line',
    '# strictDeepEquals shouldn\'t care about key order recursively\n' ],
  [ 'line', 'ok 15 should be strictly equal\n' ],
  [ 'assert',
    { ok: true, id: 14, name: 'should be strictly equal' } ],
  [ 'comment',
    '# strictDeepEquals shouldn\'t care about key order recursively\n' ],
  [ 'line',
    '# strictDeepEquals shoudn\'t care about key order (but still might)\n' ],
  [ 'line', 'ok 16 should be strictly equal\n' ],
  [ 'assert',
    { ok: true, id: 15, name: 'should be strictly equal' } ],
  [ 'comment',
    '# strictDeepEquals shoudn\'t care about key order (but still might)\n' ],
  [ 'line', '# tests 3\n' ],
  [ 'line', '# pass  3\n' ],
  [ 'line', '# ok\n' ],
  [ 'line', 'ok 17 test/deep-strict.js\n' ],
  [ 'assert',
    { ok: true, id: 16, name: 'should be strictly equal' } ],
  [ 'comment', '# tests 3\n' ],
  [ 'comment', '# pass  3\n' ],
  [ 'comment', '# ok\n' ],
  [ 'line', '# deep.js\n' ],
  [ 'line', '# TAP version 13\n' ],
  [ 'line',
    '# deepEquals shouldn\'t care about key order and types\n' ],
  [ 'line', 'ok 18 should be equivalent\n' ],
  [ 'assert', { ok: true, id: 17, name: 'test/deep-strict.js' } ],
  [ 'comment', '# deep.js\n' ],
  [ 'comment', '# TAP version 13\n' ],
  [ 'comment',
    '# deepEquals shouldn\'t care about key order and types\n' ],
  [ 'line',
    '# deepEquals shouldn\'t care about key order recursively and types\n' ],
  [ 'line', 'ok 19 should be equivalent\n' ],
  [ 'assert', { ok: true, id: 18, name: 'should be equivalent' } ],
  [ 'comment',
    '# deepEquals shouldn\'t care about key order recursively and types\n' ],
  [ 'line',
    '# deepEquals shoudn\'t care about key order (but still might) and types\n' ],
  [ 'line', 'ok 20 should be equivalent\n' ],
  [ 'assert', { ok: true, id: 19, name: 'should be equivalent' } ],
  [ 'comment',
    '# deepEquals shoudn\'t care about key order (but still might) and types\n' ],
  [ 'line', '# tests 3\n' ],
  [ 'line', '# pass  3\n' ],
  [ 'line', '# ok\n' ],
  [ 'line', 'ok 21 test/deep.js\n' ],
  [ 'assert', { ok: true, id: 20, name: 'should be equivalent' } ],
  [ 'comment', '# tests 3\n' ],
  [ 'comment', '# pass  3\n' ],
  [ 'comment', '# ok\n' ],
  [ 'line', '# executed.sh\n' ],
  [ 'line',
    'ok 22 File with executable bit should be executed\n' ],
  [ 'assert', { ok: true, id: 21, name: 'test/deep.js' } ],
  [ 'comment', '# executed.sh\n' ],
  [ 'line', 'ok 23 test/executed.sh\n' ],
  [ 'assert',
    { ok: true,
      id: 22,
      name: 'File with executable bit should be executed' } ],
  [ 'line', '# exit-code.js\n' ],
  [ 'line', '# TAP version 13\n' ],
  [ 'line', '# exit code 1 when tap results show failure\n' ],
  [ 'line', '# test exits 0, has failures\n' ],
  [ 'line', 'ok 24 should be equal\n' ],
  [ 'assert', { ok: true, id: 23, name: 'test/executed.sh' } ],
  [ 'comment', '# exit-code.js\n' ],
  [ 'comment', '# TAP version 13\n' ],
  [ 'comment', '# exit code 1 when tap results show failure\n' ],
  [ 'comment', '# test exits 0, has failures\n' ],
  [ 'line', 'ok 25 should be equal\n' ],
  [ 'assert', { ok: true, id: 24, name: 'should be equal' } ],
  [ 'line', '# test exits 1, has failures\n' ],
  [ 'line', 'ok 26 should be equal\n' ],
  [ 'assert', { ok: true, id: 25, name: 'should be equal' } ],
  [ 'comment', '# test exits 1, has failures\n' ],
  [ 'line', 'ok 27 should be equal\n' ],
  [ 'assert', { ok: true, id: 26, name: 'should be equal' } ],
  [ 'line', '# test exits 1, has no failures\n' ],
  [ 'line', 'ok 28 should be equal\n' ],
  [ 'assert', { ok: true, id: 27, name: 'should be equal' } ],
  [ 'comment', '# test exits 1, has no failures\n' ],
  [ 'line', 'ok 29 should be equal\n' ],
  [ 'assert', { ok: true, id: 28, name: 'should be equal' } ],
  [ 'line', '# successes exit 0\n' ],
  [ 'line', '# test that does nothing, but exits 0\n' ],
  [ 'line', 'ok 30 should be equal\n' ],
  [ 'assert', { ok: true, id: 29, name: 'should be equal' } ],
  [ 'comment', '# successes exit 0\n' ],
  [ 'comment', '# test that does nothing, but exits 0\n' ],
  [ 'line', 'ok 31 should be equal\n' ],
  [ 'assert', { ok: true, id: 30, name: 'should be equal' } ],
  [ 'line', '# test that succeeds, and exits 0\n' ],
  [ 'line', 'ok 32 should be equal\n' ],
  [ 'assert', { ok: true, id: 31, name: 'should be equal' } ],
  [ 'comment', '# test that succeeds, and exits 0\n' ],
  [ 'line', 'ok 33 should be equal\n' ],
  [ 'assert', { ok: true, id: 32, name: 'should be equal' } ],
  [ 'line', '# tests 10\n' ],
  [ 'line', '# pass  10\n' ],
  [ 'line', '# ok\n' ],
  [ 'line', 'ok 34 test/exit-code.js\n' ],
  [ 'assert', { ok: true, id: 33, name: 'should be equal' } ],
  [ 'comment', '# tests 10\n' ],
  [ 'comment', '# pass  10\n' ],
  [ 'comment', '# ok\n' ],
  [ 'line', '# expose-gc-test.js\n' ],
  [ 'line', 'gc test\n' ],
  [ 'extra', 'gc test\n' ],
  [ 'line', 't.plan=1\n' ],
  [ 'extra', 't.plan=1\n' ],
  [ 'line', 'assert gc does not exist\n' ],
  [ 'extra', 'assert gc does not exist\n' ],
  [ 'line', '# TAP version 13\n' ],
  [ 'line', '# gc test when the gc isn\'t there\n' ],
  [ 'line', 'gc test\n' ],
  [ 'extra', 'gc test\n' ],
  [ 'line', 't.plan=2\n' ],
  [ 'extra', 't.plan=2\n' ],
  [ 'line', 'gc test using --gc\n' ],
  [ 'extra', 'gc test using --gc\n' ],
  [ 'line', 't.plan=1\n' ],
  [ 'extra', 't.plan=1\n' ],
  [ 'line', 'assert gc exists\n' ],
  [ 'extra', 'assert gc exists\n' ],
  [ 'line', 'gc test using --expose-gc\n' ],
  [ 'extra', 'gc test using --expose-gc\n' ],
  [ 'line', 't.plan=1\n' ],
  [ 'extra', 't.plan=1\n' ],
  [ 'line', 'assert gc exists\n' ],
  [ 'extra', 'assert gc exists\n' ],
  [ 'line', 'ok 35 should be equal\n' ],
  [ 'assert', { ok: true, id: 34, name: 'test/exit-code.js' } ],
  [ 'comment', '# expose-gc-test.js\n' ],
  [ 'comment', '# TAP version 13\n' ],
  [ 'comment', '# gc test when the gc isn\'t there\n' ],
  [ 'line', '# gc test when the gc should be there\n' ],
  [ 'line', '# test for gc using --gc\n' ],
  [ 'line', 'ok 36 should be equal\n' ],
  [ 'assert', { ok: true, id: 35, name: 'should be equal' } ],
  [ 'comment', '# gc test when the gc should be there\n' ],
  [ 'comment', '# test for gc using --gc\n' ],
  [ 'line', '# test for gc using --expose-gc\n' ],
  [ 'line', 'ok 37 should be equal\n' ],
  [ 'assert', { ok: true, id: 36, name: 'should be equal' } ],
  [ 'comment', '# test for gc using --expose-gc\n' ],
  [ 'line', '# cleanup\n' ],
  [ 'line', '# tests 3\n' ],
  [ 'line', '# pass  3\n' ],
  [ 'line', '# ok\n' ],
  [ 'line', 'ok 38 test/expose-gc-test.js\n' ],
  [ 'assert', { ok: true, id: 37, name: 'should be equal' } ],
  [ 'comment', '# cleanup\n' ],
  [ 'comment', '# tests 3\n' ],
  [ 'comment', '# pass  3\n' ],
  [ 'comment', '# ok\n' ],
  [ 'line', '# global-harness-async.js\n' ],
  [ 'line', '# TAP version 13\n' ],
  [ 'line', '# outer\n' ],
  [ 'line', '# inner 1\n' ],
  [ 'line', 'ok 39 1-1\n' ],
  [ 'assert',
    { ok: true, id: 38, name: 'test/expose-gc-test.js' } ],
  [ 'comment', '# global-harness-async.js\n' ],
  [ 'comment', '# TAP version 13\n' ],
  [ 'comment', '# outer\n' ],
  [ 'comment', '# inner 1\n' ],
  [ 'line', '# inner 2\n' ],
  [ 'line', 'ok 40 2-1\n' ],
  [ 'assert', { ok: true, id: 39, name: '1-1' } ],
  [ 'comment', '# inner 2\n' ],
  [ 'line', '# inner 3\n' ],
  [ 'line', 'ok 41 3-1\n' ],
  [ 'assert', { ok: true, id: 40, name: '2-1' } ],
  [ 'comment', '# inner 3\n' ],
  [ 'line', 'ok 42 test/global-harness-async.js\n' ],
  [ 'assert', { ok: true, id: 41, name: '3-1' } ],
  [ 'line', '# independent-timeouts.js\n' ],
  [ 'line', '# TAP version 13\n' ],
  [ 'line', '# finishes in time\n' ],
  [ 'line', '# finishes in time too\n' ],
  [ 'line', '# tests 0\n' ],
  [ 'line', '# ok\n' ],
  [ 'line', 'ok 43 test/independent-timeouts.js\n' ],
  [ 'assert',
    { ok: true, id: 42, name: 'test/global-harness-async.js' } ],
  [ 'comment', '# independent-timeouts.js\n' ],
  [ 'comment', '# TAP version 13\n' ],
  [ 'comment', '# finishes in time\n' ],
  [ 'comment', '# finishes in time too\n' ],
  [ 'comment', '# tests 0\n' ],
  [ 'comment', '# ok\n' ],
  [ 'line', '# isolated-conf-test.js\n' ],
  [ 'line', '# TAP version 13\n' ],
  [ 'line', '# one\n' ],
  [ 'line', 'ok 44 should be equal\n' ],
  [ 'assert',
    { ok: true, id: 43, name: 'test/independent-timeouts.js' } ],
  [ 'comment', '# isolated-conf-test.js\n' ],
  [ 'comment', '# TAP version 13\n' ],
  [ 'comment', '# one\n' ],
  [ 'line', 'ok 45 should be equal\n' ],
  [ 'assert', { ok: true, id: 44, name: 'should be equal' } ],
  [ 'line', '# two\n' ],
  [ 'line', 'ok 46 should be equal\n' ],
  [ 'assert', { ok: true, id: 45, name: 'should be equal' } ],
  [ 'comment', '# two\n' ],
  [ 'line', 'ok 47 should be equal\n' ],
  [ 'assert', { ok: true, id: 46, name: 'should be equal' } ],
  [ 'line', '# tests 4\n' ],
  [ 'line', '# pass  4\n' ],
  [ 'line', '# ok\n' ],
  [ 'line', 'ok 48 test/isolated-conf-test.js\n' ],
  [ 'assert', { ok: true, id: 47, name: 'should be equal' } ],
  [ 'comment', '# tests 4\n' ],
  [ 'comment', '# pass  4\n' ],
  [ 'comment', '# ok\n' ],
  [ 'line', '# meta-test.js\n' ],
  [ 'line', '# TAP version 13\n' ],
  [ 'line', '# meta test\n' ],
  [ 'line', 'ok 49 sanity check\n' ],
  [ 'assert',
    { ok: true, id: 48, name: 'test/isolated-conf-test.js' } ],
  [ 'comment', '# meta-test.js\n' ],
  [ 'comment', '# TAP version 13\n' ],
  [ 'comment', '# meta test\n' ],
  [ 'line', 'ok 50 not ok\n' ],
  [ 'assert', { ok: true, id: 49, name: 'sanity check' } ],
  [ 'line', 'ok 51 total test count\n' ],
  [ 'assert', { ok: true, id: 50, name: 'not ok' } ],
  [ 'line', 'ok 52 tests passed\n' ],
  [ 'assert', { ok: true, id: 51, name: 'total test count' } ],
  [ 'line', 'ok 53 tests failed\n' ],
  [ 'assert', { ok: true, id: 52, name: 'tests passed' } ],
  [ 'line', 'ok 54 ok is boolean\n' ],
  [ 'assert', { ok: true, id: 53, name: 'tests failed' } ],
  [ 'line', 'ok 55 skip is number\n' ],
  [ 'assert', { ok: true, id: 54, name: 'ok is boolean' } ],
  [ 'line', 'ok 56 results isa Results\n' ],
  [ 'assert', { ok: true, id: 55, name: 'skip is number' } ],
  [ 'line', 'ok 57 test isa Test\n' ],
  [ 'assert', { ok: true, id: 56, name: 'results isa Results' } ],
  [ 'line', 'ok 58 test isa Harness\n' ],
  [ 'assert', { ok: true, id: 57, name: 'test isa Test' } ],
  [ 'line', '# tests 10\n' ],
  [ 'line', '# pass  10\n' ],
  [ 'line', '# ok\n' ],
  [ 'line', 'ok 59 test/meta-test.js\n' ],
  [ 'assert', { ok: true, id: 58, name: 'test isa Harness' } ],
  [ 'comment', '# tests 10\n' ],
  [ 'comment', '# pass  10\n' ],
  [ 'comment