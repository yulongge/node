'use strict';
var assert = require('assert');
var inherits = require('util').inherits;
var EventEmitter = require('events').EventEmitter;

inherits(Test, EventEmitter);

function Test(title, fn) {
	if (typeof title !== 'string') {
		fn = title;
		title = null;
	}

	this.title = title || fn.name || '[anonymous]';
	this._fn = fn;
	this._plan = null;
	this._skip = false;
	this._assertCount = 0;
	this._assertError = null;
	this._endCalled = false;
	this._ended = false;
}

Test.prototype.end = function () {
	if (this._endCalled) {
		console.error('.end() called more than once');
	}

	this._endCalled = true;
	this._end();
};

Test.prototype._end = function () {
	if (!this._ended) {
		this.emit('end');
	}

	this._ended = true;
};

Test.prototype.assert = function () {
	try {
		assert.apply(null, arguments);
	} catch (err) {
		this._assertError = err;
		this._end();
		return;
	}

	if (this._plan === ++this._assertCount) {
		this._end();
	}
};

Test.prototype.plan = function (count) {
	if (typeof count !== 'number') {